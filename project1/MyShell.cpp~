#ifndef MYSHELL
#define MYSHELL
#include <cstring>
#include <iostream>
#include <unistd.h>
#include <sys/types.h>
#include <wait.h>
#include <stdlib.h>
using namespace std;
#endif // MYSHELL

int parseLine(char *, char * []);

int main(int argc, char *argv[])
{
        pid_t fpid;
        char *line;
        char str[10]="";
        char *command_array[3];
        do
        {
                cout<<"MyShell>";
                cin.getline(str,10);
                line = str;
                int count = parseLine(line,command_array);

                if(strcmp(command_array[0],"exit") == 0) break;

		if(strcmp(command_array[0],"cd") == 0) { chdir(command_array[1]);continue}
                fpid = fork();
                if(fpid < 0)
                        cout<<"Error:Faild to fork.\n";
                else if(fpid ==0)
                {
                        if(execvp(command_array[0],command_array)==-1)
                        {
                                cout<<"Error: running command: '"<<line<<"'\n";
                                exit(0);
                        }
                }
                else wait(NULL);
        }while(true);

        return 0;
}

int parseLine(char *line, char *command_array[])
{
        char *p;
        int count=0;
        p = strtok(line, " ");
        while (p && strcmp(p,"|")!=0)
        {
                command_array[count] = p;
                count++;
                p = strtok(NULL," ");
        }
        command_array[count] = NULL;
        return count;
}

/*void parseLine(char *line, char *command_array[])
{
        char *p=line;
        char i,j;

        while(*p!='\0')
        {

        }
}*/
